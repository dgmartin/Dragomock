/*
 * Copyright 2017  Daniel Martin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.9"
    }
}

group 'com.github.dgmartin'
version '0.7.00'

repositories {
    mavenCentral()
}
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven'

apply from: "$rootDir/gradle/functional-test.gradle"
apply plugin: "com.gradle.plugin-publish"

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${project.getRootDir()}/Repo"))
        }
    }
}

dependencies {
    compile gradleApi()
    testCompile group: 'junit', name: 'junit', version: '4.12'

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true
    }
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'https://github.com/dgmartin/Dragomock'
    vcsUrl = 'https://github.com/dgmartin/Dragomock'


    plugins {
        dragomockPlugin {
            id = 'com.github.dgmartin.Dragomock'
            displayName = 'Dragomock Plugin'
            description = "Dragomock is a mock translation generator. It is used to create more natural mock translations " +
                    "that provide developers a better idea of how their code and UI will perform under more natural " +
                    "localization test cases. It can also be used for demonstrating the localization abilities in an app."
            tags = ['Android', 'Strings', 'Translate']
        }
    }
}
